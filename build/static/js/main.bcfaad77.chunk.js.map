{"version":3,"sources":["components/MapMain/MapMain.js","components/Sidebar/Sidebar.js","App.js","serviceWorker.js","index.js"],"names":["initialViewState","longitude","latitude","zoom","pitch","bearing","MapMain","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","layers","data","LineLayer","id","sourcePosition","targetPosition","setState","react_default","a","createElement","esm","controller","dist_esm","mapboxApiAccessToken","React","Component","Sidebar","onUpdate","update","onChange","values","layersIsVisible","filtersIsVisible","addTrackerIsVisible","filters","availableFilters","text","min","max","range","value","lstep","step","toggleLayers","bind","assertThisInitialized","handleTrackerAdd","handleFilterItemClick","handleValueChange","handleFilterRemove","addTrackerVisibility","item","push","idx","splice","_this2","className","style","clear","height","width","buttonGroup","minimal","fill","buttons","onClick","icon","showTrackerFormCallback","intent","divider","popover","content","menu","map","filter","menuItem","position","Position","RIGHT_TOP","card","interactive","elevation","Elevation","TWO","tag","key","onRemove","rangeSlider","stepSize","labelStepSize","vertical","App","trackerFormisOpen","handleTrackerFormClose","_trackerFormisOpen","components_Sidebar_Sidebar","components_MapMain_MapMain","overlay","isOpen","Classes","OVERLAY_SCROLL_CONTAINER","canOutsideClickClose","usePortal","onClose","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bcfaad77.chunk.js","sourcesContent":["import React from 'react'\r\nimport DeckGL, {LineLayer} from 'deck.gl'\r\nimport {StaticMap} from 'react-map-gl'\r\n// Set your mapbox access token here\r\nconst MAPBOX_ACCESS_TOKEN = 'pk.eyJ1Ijoia2F1bmlsLWRocnV2IiwiYSI6ImNqdHA3djZhYTAxdmw0YXJ2Nm9nZWZpdTMifQ.i2khisdjFR-fPCZ421loYg';\r\n\r\n// Initial viewport settings\r\nconst initialViewState = {\r\n  longitude: -122.41669,\r\n  latitude: 37.7853,\r\n  zoom: 13,\r\n  pitch: 0,\r\n  bearing: 0\r\n};\r\n\r\nclass MapMain extends React.Component{\r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        layers: [],\r\n        data: [],\r\n      }\r\n  }\r\n\r\n  componentDidMount(){\r\n    var data = [\r\n      {\r\n        sourcePosition: [-122.41669, 37.7853],\r\n        targetPosition: [-122.41669, 37.781]\r\n      }\r\n    ];\r\n    var layers = [\r\n      new LineLayer({id: 'line-layer', data})\r\n    ];\r\n\r\n    this.setState({layers: layers});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      \r\n      <DeckGL\r\n        initialViewState={initialViewState}\r\n        controller={true}\r\n        layers={this.state.layers}\r\n      >\r\n        <StaticMap mapboxApiAccessToken={\r\n          MAPBOX_ACCESS_TOKEN\r\n        } />\r\n      </DeckGL>\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapMain\r\n","import React from 'react'\r\n\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Divider,\r\n  Popover,\r\n  Card,\r\n  Elevation,\r\n  Menu,\r\n  Tag,\r\n  Position,\r\n  MenuItem,\r\n  RangeSlider\r\n\r\n} from \"@blueprintjs/core\"\r\n\r\nimport './Sidebar.css'\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      layersIsVisible: !true,\r\n      filtersIsVisible: !false,\r\n      addTrackerIsVisible: false,\r\n      filters: []\r\n    }\r\n\r\n\r\n    this.availableFilters = [\r\n      {text:\"pickup-time\",\r\n        min:0, max:24,\r\n        range: true, value:[0, 24],\r\n        lstep:6,\r\n        step:1\r\n      },\r\n      {text:\"dropoff-time\",\r\n        min:0, max:24,\r\n        range: true, value:[0, 24],\r\n        lstep:6,\r\n        step:1\r\n      },\r\n      {text:\"trip-distance\",\r\n        min:0, max:1,\r\n        range: true, value:[0, 1],\r\n        lstep:1,\r\n        step:0.1\r\n      },\r\n      {text:\"passenger-count\",\r\n        min:0, max:6,\r\n        range: true, value:[0, 6],\r\n        lstep:2,\r\n        step:1\r\n      },\r\n      {text:\"pickup-lat\",\r\n        min:77, max:79,\r\n        range: true, value:[77, 79],\r\n        lstep:1,\r\n        step:0.01\r\n      },\r\n      {text:\"pickup-lon\",\r\n        min:77, max:79,\r\n        range: true, value:[77, 79],\r\n        lstep:1,\r\n        step:0.01\r\n      },\r\n      {text:\"dropoff-lat\",\r\n        min:77, max:79,\r\n        range: true, value:[77, 79],\r\n        lstep:1,\r\n        step:0.01\r\n      },\r\n      {text:\"dropoff-lon\",\r\n        min:77, max:79,\r\n        range: true, value:[77, 79],\r\n        lstep:1,\r\n        step:0.01\r\n      },\r\n      {text:\"fare-amt\",\r\n        min:0, max:500,\r\n        range: true, value:[0, 500],\r\n        lstep:100,\r\n        step:10\r\n      },\r\n      {text:\"tip-amt\",\r\n        min:0, max:500,\r\n        range: true, value:[0, 500],\r\n        lstep:100,\r\n        step:10\r\n      },\r\n      {text:\"total-amt\",\r\n        min:0, max:500,\r\n        range: true, value:[0, 500],\r\n        lstep:100,\r\n        step:10\r\n      }\r\n    ];\r\n\r\n    this.toggleLayers = this.toggleLayers.bind(this)\r\n    this.handleTrackerAdd = this.handleTrackerAdd.bind(this)\r\n    this.handleFilterItemClick = this.handleFilterItemClick.bind(this)\r\n    this.handleValueChange = this.handleValueChange.bind(this)\r\n    this.handleFilterRemove = this.handleFilterRemove.bind(this)\r\n  }\r\n\r\n\r\n  onUpdate = update => {\r\n    this.setState({ update })\r\n  }\r\n\r\n  onChange = values => {\r\n    this.setState({ values })\r\n  }\r\n\r\n\r\n  toggleLayers() {\r\n    var layersIsVisible = !this.state.layersIsVisible\r\n    this.setState({\r\n      layersIsVisible: layersIsVisible,\r\n      filtersIsVisible: !layersIsVisible,\r\n\r\n    })\r\n  }\r\n\r\n  handleTrackerAdd() {\r\n    var addTrackerVisibility = this.state.addTrackerIsVisible\r\n    this.setState({\r\n      addTrackerIsVisible: !addTrackerVisibility\r\n    })\r\n  }\r\n\r\n  handleFilterItemClick(item) {\r\n    let filters = this.state.filters;\r\n    filters.push(this.availableFilters[item]);\r\n    this.setState({filters: filters})\r\n  }\r\n\r\n  handleValueChange(idx, value) {\r\n    let filters = this.state.filters;\r\n    filters[idx].value = value;\r\n    this.setState({filters: filters})\r\n  };\r\n\r\n  handleFilterRemove(idx) {\r\n    let filters = this.state.filters;\r\n    filters.splice(idx);\r\n    this.setState({filters: filters})\r\n  }\r\n  render() {\r\n    const filters = this.state.filters;\r\n    return (\r\n      <div className=\"Sidebar\">\r\n        <div\r\n          style={{\r\n            clear:\"both\",\r\n            height:\"50px\",\r\n            width:\"100%\"\r\n\r\n          }}\r\n          className=\"tabButtonContainer\"\r\n        >\r\n          <ButtonGroup minimal fill>\r\n            <Button onClick={this.toggleLayers} icon=\"layers\" />\r\n            <Button onClick={this.toggleLayers} icon=\"filter\" />\r\n          </ButtonGroup>\r\n        </div>\r\n        {\r\n        // tracker tab\r\n        }\r\n        <div\r\n          className={this.state.layersIsVisible ? \"tabContainer\" : \"tabContainer  tabVisible\"}\r\n        >\r\n\r\n          <h3 className=\"bp3-dark bp3-heading\">Layers</h3>\r\n          <Button onClick={this.props.showTrackerFormCallback} intent=\"primary\" className=\"rect\" icon=\"plus\"  text=\"Add Tracker\"/>\r\n          <Divider className=\"dividerBorder\"/>\r\n\r\n        </div>\r\n\r\n        {\r\n          // filters tab\r\n        }\r\n        <div\r\n          className={this.state.layersIsVisible ? \"tabContainer tabVisible\" : \"tabContainer \"}\r\n        >\r\n          <h3 className=\"bp3-dark bp3-heading\">Filters</h3>\r\n          <Popover content={\r\n            <Menu>\r\n            {\r\n              this.availableFilters.map((filter, idx) =>{\r\n                return <MenuItem icon=\"graph\" text={filter.text} onClick={()=>this.handleFilterItemClick(idx)} />\r\n              })\r\n            }\r\n          </Menu>\r\n          } position={Position.RIGHT_TOP}>\r\n            <Button intent=\"primary\" className=\"rect\" icon=\"plus\"  text=\"Add Filter\"/>\r\n          </Popover>\r\n          <Divider className=\"dividerBorder\"/>\r\n          <div className=\"filter-item-contanier\">\r\n            {\r\n              filters.map((filter, idx) => {\r\n                  return(\r\n                    <Card className=\"bp3-dark margin-top\" interactive={true} elevation={Elevation.TWO}>\r\n                      <Tag\r\n                        className=\"float-left-top\"\r\n                        key={idx}\r\n                        fill={true}\r\n                        onRemove={()=>this.handleFilterRemove(idx)}\r\n                        >\r\n                        {filter.text}\r\n                      </Tag>\r\n                      <RangeSlider\r\n                        className=\"range-slider-style\"\r\n                        min={filter.min}\r\n                        max={filter.max}\r\n                        stepSize={filter.step}\r\n                        labelStepSize={filter.lstep}\r\n                        value={filter.value}\r\n                        vertical={false}\r\n                        onChange={(value)=>this.handleValueChange(idx, value)}\r\n                      />\r\n                    </Card>\r\n                  )\r\n                \r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Sidebar\r\n","/// app.js\r\nimport React from 'react';\r\nimport MapMain from './components/MapMain'\r\nimport Sidebar from './components/Sidebar'\r\nimport {\r\n  Overlay,\r\n  Classes,\r\n  Card, Button\r\n} from \"@blueprintjs/core\";\r\n\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trackerFormisOpen: false\r\n    }\r\n\r\n    this.showTrackerFormCallback = this.showTrackerFormCallback.bind(this)\r\n    this.handleTrackerFormClose = this.handleTrackerFormClose.bind(this)\r\n  }\r\n\r\n  showTrackerFormCallback() {\r\n    var _trackerFormisOpen = this.state.trackerFormisOpen\r\n    this.setState({\r\n      trackerFormisOpen: !_trackerFormisOpen\r\n    })\r\n  }\r\n\r\n  handleTrackerFormClose() {\r\n    this.setState({\r\n      trackerFormisOpen: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div style={{clear: \"both\"}}>\r\n\r\n        <div className=\"firstColumn\" >\r\n          <Sidebar showTrackerFormCallback={this.showTrackerFormCallback} />\r\n        </div>\r\n\r\n        <div className=\"secondColumn\">\r\n          <MapMain />\r\n        </div>\r\n\r\n        <Overlay\r\n          isOpen={this.state.trackerFormisOpen}\r\n          className={Classes.OVERLAY_SCROLL_CONTAINER}\r\n          canOutsideClickClose={true}\r\n          usePortal={true}\r\n          onClose={this.handleTrackerFormClose}\r\n        >\r\n          <Card\r\n            elevation={4}\r\n            interactive={true}\r\n            className=\"centerOverlay bp3-dark\"\r\n          >\r\n            <h5><a href=\"http://google.com\">Card heading</a></h5>\r\n            <p>Card content</p>\r\n            <Button>Submit</Button>\r\n          </Card>\r\n        </Overlay>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}